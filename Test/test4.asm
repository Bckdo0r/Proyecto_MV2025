    MOV EAX, 0x01
INICIO:MOV EDX,DS
	LDL ECX, 1
	LDH ECX, 4
	SYS 1
	MOV [EBX], [EDX]
	ADD EDX, 4
	MOV EAX, 0x01
	LDL ECX, 1
	LDH ECX, 4
	SYS 1
	MOV [ECX],[EDX]
	MOV EEX,0
	XOR EAX, EAX
	CMP EBX,0
	JZ FIN
	JNN EBX-NEG
	NOT EBX
	ADD EEX,1
	CMP ECX,0
	JNN MUL
	NOT ECX
	SUB EEX,1
	JMP MUL 
EBX-NEG:CMP ECX,0
	JNN MUL
	NOT ECX
	ADD EEX,1
MUL:CMP ECX,0
	JZ FIN
	ADD EAX, EBX
	SUB ECX, 1
	JMP MUL
FIN:CMP EEX,0
	JZ MUESTRA
	NOT EAX
MUESTRA:MOV EAX 0x1F
	MOV EDX, DS
	ADD EDX,
	LDH ECX,4
	LDL ECX,1
	SYS 2
	STOP
//Suponiendo que no existe la instrucci√≥n MUL, crear un algoritmo que reciba en EBX y ECX los
dos valores y retorne en EAX su producto.